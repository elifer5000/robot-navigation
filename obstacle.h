// Class automatically generated by Dev-C++ New Class wizard

#ifndef OBSTACLE_H
#define OBSTACLE_H

#pragma once

#include <vector>

#include "GLUT/glut.h"
#include "point.h"
#include "robot.h"
#include "dependencies.h"
#include "Grid.h"

using namespace std;

class mypair {
    public:
        int i;
        int j;
        
        mypair(int _i=0,int _j=0): i(_i),j(_j) {}
};

/*
 * No description
 */
class obstacle
{
      public:
           /* Class elements */
           vector<point> Vertices; // real obstacle
           vector<vector<point> > Slices; // C-Obstacle slices
           
           vector<point> Normals;
           vector<float> NormAngles;
           int MinNormAngInd;
           
           /* Constructor */
           obstacle();
           
		// class destructor
		~obstacle();
                          
           /* Functions */     
           void AddVertex(float x, float y);
           void CalculateNormals(); 
           
           void CalculateCObst3D(robot& Robot, CGrid& _grid);
           void CalculateCObstSlice(robot& Robot, float theta, vector<point>& Slice);
           void SortAngles(vector<float>& Angles, int MinInd);
           
           void DrawObst();
           void DrawCObst(int Slice);
};

#endif // OBSTACLE_H
